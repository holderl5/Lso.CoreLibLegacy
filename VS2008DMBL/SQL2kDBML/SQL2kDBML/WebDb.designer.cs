#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3643
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SQL2kDBML
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="LsoCoreTest")]
	public partial class WebDbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertcustomerProfile(customerProfile instance);
    partial void UpdatecustomerProfile(customerProfile instance);
    partial void DeletecustomerProfile(customerProfile instance);
    partial void InsertNewUser(NewUser instance);
    partial void UpdateNewUser(NewUser instance);
    partial void DeleteNewUser(NewUser instance);
    partial void InsertWebControl(WebControl instance);
    partial void UpdateWebControl(WebControl instance);
    partial void DeleteWebControl(WebControl instance);
    partial void InsertServiceByZipCode(ServiceByZipCode instance);
    partial void UpdateServiceByZipCode(ServiceByZipCode instance);
    partial void DeleteServiceByZipCode(ServiceByZipCode instance);
    partial void InsertWebDispatch(WebDispatch instance);
    partial void UpdateWebDispatch(WebDispatch instance);
    partial void DeleteWebDispatch(WebDispatch instance);
    partial void InsertUserProfile(UserProfile instance);
    partial void UpdateUserProfile(UserProfile instance);
    partial void DeleteUserProfile(UserProfile instance);
    #endregion
		
		public WebDbDataContext() : 
				base(global::SQL2kDBML.Properties.Settings.Default.LsoCoreTestConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public WebDbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WebDbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WebDbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WebDbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<customerProfile> customerProfiles
		{
			get
			{
				return this.GetTable<customerProfile>();
			}
		}
		
		public System.Data.Linq.Table<NewUser> NewUsers
		{
			get
			{
				return this.GetTable<NewUser>();
			}
		}
		
		public System.Data.Linq.Table<WebControl> WebControls
		{
			get
			{
				return this.GetTable<WebControl>();
			}
		}
		
		public System.Data.Linq.Table<ServiceByZipCode> ServiceByZipCodes
		{
			get
			{
				return this.GetTable<ServiceByZipCode>();
			}
		}
		
		public System.Data.Linq.Table<WebDispatch> WebDispatches
		{
			get
			{
				return this.GetTable<WebDispatch>();
			}
		}
		
		public System.Data.Linq.Table<Holiday> Holidays
		{
			get
			{
				return this.GetTable<Holiday>();
			}
		}
		
		public System.Data.Linq.Table<UserProfile> UserProfiles
		{
			get
			{
				return this.GetTable<UserProfile>();
			}
		}
		
		public System.Data.Linq.Table<IGroup> IGroups
		{
			get
			{
				return this.GetTable<IGroup>();
			}
		}
		
		[Function(Name="dbo.sp_getuid")]
		public int sp_getuid([Parameter(Name="Uid", DbType="Int")] ref System.Nullable<int> uid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), uid);
			uid = ((System.Nullable<int>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.spRestoreWebshipAccountRepositoryTestState")]
		public int spRestoreWebshipAccountRepositoryTestState()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.spRestorePickupTableTestState")]
		public int spRestorePickupTableTestState()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.spRestoreAllTestState")]
		public int spRestoreAllTestState()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.sp_getLatestTime")]
		public ISingleResult<sp_getLatestTimeResult> sp_getLatestTime([Parameter(Name="ZipCode", DbType="VarChar(5)")] string zipCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), zipCode);
			return ((ISingleResult<sp_getLatestTimeResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.sp_checkMaxLocPU")]
		public int sp_checkMaxLocPU([Parameter(DbType="Int")] System.Nullable<int> acctNo, [Parameter(DbType="VarChar(10)")] string phoneNo, [Parameter(DbType="VarChar(5)")] string phoneExt, [Parameter(DbType="DateTime")] System.Nullable<System.DateTime> pickupDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), acctNo, phoneNo, phoneExt, pickupDate);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.sp_getEarliestClosingTime")]
		public ISingleResult<sp_getEarliestClosingTimeResult> sp_getEarliestClosingTime()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_getEarliestClosingTimeResult>)(result.ReturnValue));
		}
	}
	
	[Table(Name="dbo.customerProfile")]
	public partial class customerProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustID;
		
		private string _CustName;
		
		private string _CustContactPhone;
		
		private string _PhyAddress1;
		
		private string _PhyAddress2;
		
		private string _PhyCity;
		
		private string _PhyState;
		
		private string _PhyZip;
		
		private System.Nullable<bool> _AccountLockout;
		
		private System.Nullable<bool> _KnownShipper;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustIDChanging(int value);
    partial void OnCustIDChanged();
    partial void OnCustNameChanging(string value);
    partial void OnCustNameChanged();
    partial void OnCustContactPhoneChanging(string value);
    partial void OnCustContactPhoneChanged();
    partial void OnPhyAddress1Changing(string value);
    partial void OnPhyAddress1Changed();
    partial void OnPhyAddress2Changing(string value);
    partial void OnPhyAddress2Changed();
    partial void OnPhyCityChanging(string value);
    partial void OnPhyCityChanged();
    partial void OnPhyStateChanging(string value);
    partial void OnPhyStateChanged();
    partial void OnPhyZipChanging(string value);
    partial void OnPhyZipChanged();
    partial void OnAccountLockoutChanging(System.Nullable<bool> value);
    partial void OnAccountLockoutChanged();
    partial void OnKnownShipperChanging(System.Nullable<bool> value);
    partial void OnKnownShipperChanged();
    #endregion
		
		public customerProfile()
		{
			OnCreated();
		}
		
		[Column(Storage="_CustID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CustID
		{
			get
			{
				return this._CustID;
			}
			set
			{
				if ((this._CustID != value))
				{
					this.OnCustIDChanging(value);
					this.SendPropertyChanging();
					this._CustID = value;
					this.SendPropertyChanged("CustID");
					this.OnCustIDChanged();
				}
			}
		}
		
		[Column(Storage="_CustName", DbType="VarChar(40)")]
		public string CustName
		{
			get
			{
				return this._CustName;
			}
			set
			{
				if ((this._CustName != value))
				{
					this.OnCustNameChanging(value);
					this.SendPropertyChanging();
					this._CustName = value;
					this.SendPropertyChanged("CustName");
					this.OnCustNameChanged();
				}
			}
		}
		
		[Column(Storage="_CustContactPhone", DbType="VarChar(10)")]
		public string CustContactPhone
		{
			get
			{
				return this._CustContactPhone;
			}
			set
			{
				if ((this._CustContactPhone != value))
				{
					this.OnCustContactPhoneChanging(value);
					this.SendPropertyChanging();
					this._CustContactPhone = value;
					this.SendPropertyChanged("CustContactPhone");
					this.OnCustContactPhoneChanged();
				}
			}
		}
		
		[Column(Storage="_PhyAddress1", DbType="VarChar(60)")]
		public string PhyAddress1
		{
			get
			{
				return this._PhyAddress1;
			}
			set
			{
				if ((this._PhyAddress1 != value))
				{
					this.OnPhyAddress1Changing(value);
					this.SendPropertyChanging();
					this._PhyAddress1 = value;
					this.SendPropertyChanged("PhyAddress1");
					this.OnPhyAddress1Changed();
				}
			}
		}
		
		[Column(Storage="_PhyAddress2", DbType="VarChar(60)")]
		public string PhyAddress2
		{
			get
			{
				return this._PhyAddress2;
			}
			set
			{
				if ((this._PhyAddress2 != value))
				{
					this.OnPhyAddress2Changing(value);
					this.SendPropertyChanging();
					this._PhyAddress2 = value;
					this.SendPropertyChanged("PhyAddress2");
					this.OnPhyAddress2Changed();
				}
			}
		}
		
		[Column(Storage="_PhyCity", DbType="VarChar(30)")]
		public string PhyCity
		{
			get
			{
				return this._PhyCity;
			}
			set
			{
				if ((this._PhyCity != value))
				{
					this.OnPhyCityChanging(value);
					this.SendPropertyChanging();
					this._PhyCity = value;
					this.SendPropertyChanged("PhyCity");
					this.OnPhyCityChanged();
				}
			}
		}
		
		[Column(Storage="_PhyState", DbType="Char(2)")]
		public string PhyState
		{
			get
			{
				return this._PhyState;
			}
			set
			{
				if ((this._PhyState != value))
				{
					this.OnPhyStateChanging(value);
					this.SendPropertyChanging();
					this._PhyState = value;
					this.SendPropertyChanged("PhyState");
					this.OnPhyStateChanged();
				}
			}
		}
		
		[Column(Storage="_PhyZip", DbType="Char(10)")]
		public string PhyZip
		{
			get
			{
				return this._PhyZip;
			}
			set
			{
				if ((this._PhyZip != value))
				{
					this.OnPhyZipChanging(value);
					this.SendPropertyChanging();
					this._PhyZip = value;
					this.SendPropertyChanged("PhyZip");
					this.OnPhyZipChanged();
				}
			}
		}
		
		[Column(Storage="_AccountLockout", DbType="Bit")]
		public System.Nullable<bool> AccountLockout
		{
			get
			{
				return this._AccountLockout;
			}
			set
			{
				if ((this._AccountLockout != value))
				{
					this.OnAccountLockoutChanging(value);
					this.SendPropertyChanging();
					this._AccountLockout = value;
					this.SendPropertyChanged("AccountLockout");
					this.OnAccountLockoutChanged();
				}
			}
		}
		
		[Column(Storage="_KnownShipper", DbType="Bit")]
		public System.Nullable<bool> KnownShipper
		{
			get
			{
				return this._KnownShipper;
			}
			set
			{
				if ((this._KnownShipper != value))
				{
					this.OnKnownShipperChanging(value);
					this.SendPropertyChanging();
					this._KnownShipper = value;
					this.SendPropertyChanged("KnownShipper");
					this.OnKnownShipperChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.NewUsers")]
	public partial class NewUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UID;
		
		private string _LoginName;
		
		private string _UserFirstName;
		
		private string _UserLastName;
		
		private string _UserEmail;
		
		private string _UserPWD;
		
		private System.Nullable<int> _CustID;
		
		private string _CompanyName;
		
		private string _CompanyPhone;
		
		private string _CompanyAddress1;
		
		private string _CompanyAddress2;
		
		private string _CompanyCity;
		
		private string _CompanyState;
		
		private string _CompanyZip;
		
		private System.Nullable<bool> _Created;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _RequestDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(int value);
    partial void OnUIDChanged();
    partial void OnLoginNameChanging(string value);
    partial void OnLoginNameChanged();
    partial void OnUserFirstNameChanging(string value);
    partial void OnUserFirstNameChanged();
    partial void OnUserLastNameChanging(string value);
    partial void OnUserLastNameChanged();
    partial void OnUserEmailChanging(string value);
    partial void OnUserEmailChanged();
    partial void OnUserPWDChanging(string value);
    partial void OnUserPWDChanged();
    partial void OnCustIDChanging(System.Nullable<int> value);
    partial void OnCustIDChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnCompanyPhoneChanging(string value);
    partial void OnCompanyPhoneChanged();
    partial void OnCompanyAddress1Changing(string value);
    partial void OnCompanyAddress1Changed();
    partial void OnCompanyAddress2Changing(string value);
    partial void OnCompanyAddress2Changed();
    partial void OnCompanyCityChanging(string value);
    partial void OnCompanyCityChanged();
    partial void OnCompanyStateChanging(string value);
    partial void OnCompanyStateChanged();
    partial void OnCompanyZipChanging(string value);
    partial void OnCompanyZipChanged();
    partial void OnCreatedChanging(System.Nullable<bool> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnRequestDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRequestDateChanged();
    #endregion
		
		public NewUser()
		{
			OnCreated();
		}
		
		[Column(Storage="_UID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[Column(Storage="_LoginName", DbType="Char(20)")]
		public string LoginName
		{
			get
			{
				return this._LoginName;
			}
			set
			{
				if ((this._LoginName != value))
				{
					this.OnLoginNameChanging(value);
					this.SendPropertyChanging();
					this._LoginName = value;
					this.SendPropertyChanged("LoginName");
					this.OnLoginNameChanged();
				}
			}
		}
		
		[Column(Storage="_UserFirstName", DbType="VarChar(20)")]
		public string UserFirstName
		{
			get
			{
				return this._UserFirstName;
			}
			set
			{
				if ((this._UserFirstName != value))
				{
					this.OnUserFirstNameChanging(value);
					this.SendPropertyChanging();
					this._UserFirstName = value;
					this.SendPropertyChanged("UserFirstName");
					this.OnUserFirstNameChanged();
				}
			}
		}
		
		[Column(Storage="_UserLastName", DbType="VarChar(20)")]
		public string UserLastName
		{
			get
			{
				return this._UserLastName;
			}
			set
			{
				if ((this._UserLastName != value))
				{
					this.OnUserLastNameChanging(value);
					this.SendPropertyChanging();
					this._UserLastName = value;
					this.SendPropertyChanged("UserLastName");
					this.OnUserLastNameChanged();
				}
			}
		}
		
		[Column(Storage="_UserEmail", DbType="VarChar(60)")]
		public string UserEmail
		{
			get
			{
				return this._UserEmail;
			}
			set
			{
				if ((this._UserEmail != value))
				{
					this.OnUserEmailChanging(value);
					this.SendPropertyChanging();
					this._UserEmail = value;
					this.SendPropertyChanged("UserEmail");
					this.OnUserEmailChanged();
				}
			}
		}
		
		[Column(Storage="_UserPWD", DbType="VarChar(10)")]
		public string UserPWD
		{
			get
			{
				return this._UserPWD;
			}
			set
			{
				if ((this._UserPWD != value))
				{
					this.OnUserPWDChanging(value);
					this.SendPropertyChanging();
					this._UserPWD = value;
					this.SendPropertyChanged("UserPWD");
					this.OnUserPWDChanged();
				}
			}
		}
		
		[Column(Storage="_CustID", DbType="Int")]
		public System.Nullable<int> CustID
		{
			get
			{
				return this._CustID;
			}
			set
			{
				if ((this._CustID != value))
				{
					this.OnCustIDChanging(value);
					this.SendPropertyChanging();
					this._CustID = value;
					this.SendPropertyChanged("CustID");
					this.OnCustIDChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyName", DbType="VarChar(40)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyPhone", DbType="VarChar(20)")]
		public string CompanyPhone
		{
			get
			{
				return this._CompanyPhone;
			}
			set
			{
				if ((this._CompanyPhone != value))
				{
					this.OnCompanyPhoneChanging(value);
					this.SendPropertyChanging();
					this._CompanyPhone = value;
					this.SendPropertyChanged("CompanyPhone");
					this.OnCompanyPhoneChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyAddress1", DbType="VarChar(30)")]
		public string CompanyAddress1
		{
			get
			{
				return this._CompanyAddress1;
			}
			set
			{
				if ((this._CompanyAddress1 != value))
				{
					this.OnCompanyAddress1Changing(value);
					this.SendPropertyChanging();
					this._CompanyAddress1 = value;
					this.SendPropertyChanged("CompanyAddress1");
					this.OnCompanyAddress1Changed();
				}
			}
		}
		
		[Column(Storage="_CompanyAddress2", DbType="VarChar(30)")]
		public string CompanyAddress2
		{
			get
			{
				return this._CompanyAddress2;
			}
			set
			{
				if ((this._CompanyAddress2 != value))
				{
					this.OnCompanyAddress2Changing(value);
					this.SendPropertyChanging();
					this._CompanyAddress2 = value;
					this.SendPropertyChanged("CompanyAddress2");
					this.OnCompanyAddress2Changed();
				}
			}
		}
		
		[Column(Storage="_CompanyCity", DbType="VarChar(30)")]
		public string CompanyCity
		{
			get
			{
				return this._CompanyCity;
			}
			set
			{
				if ((this._CompanyCity != value))
				{
					this.OnCompanyCityChanging(value);
					this.SendPropertyChanging();
					this._CompanyCity = value;
					this.SendPropertyChanged("CompanyCity");
					this.OnCompanyCityChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyState", DbType="VarChar(2)")]
		public string CompanyState
		{
			get
			{
				return this._CompanyState;
			}
			set
			{
				if ((this._CompanyState != value))
				{
					this.OnCompanyStateChanging(value);
					this.SendPropertyChanging();
					this._CompanyState = value;
					this.SendPropertyChanged("CompanyState");
					this.OnCompanyStateChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyZip", DbType="VarChar(9)")]
		public string CompanyZip
		{
			get
			{
				return this._CompanyZip;
			}
			set
			{
				if ((this._CompanyZip != value))
				{
					this.OnCompanyZipChanging(value);
					this.SendPropertyChanging();
					this._CompanyZip = value;
					this.SendPropertyChanged("CompanyZip");
					this.OnCompanyZipChanged();
				}
			}
		}
		
		[Column(Storage="_Created", DbType="Bit")]
		public System.Nullable<bool> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[Column(Storage="_RequestDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this.OnRequestDateChanging(value);
					this.SendPropertyChanging();
					this._RequestDate = value;
					this.SendPropertyChanged("RequestDate");
					this.OnRequestDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.WebControl")]
	public partial class WebControl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ControlNo;
		
		private System.Nullable<int> _LastUIDAssigned;
		
		private System.Nullable<int> _LastAirbillAssigned;
		
		private System.Nullable<int> _FailureRetry;
		
		private string _EntryComments;
		
		private System.Nullable<bool> _DisplayEntComm;
		
		private System.Nullable<int> _ABExpDays;
		
		private string _EmailAddress;
		
		private System.Nullable<int> _MaxCustPU;
		
		private System.Nullable<int> _MaxLocPU;
		
		private string _NewAccountRequestEmail;
		
		private System.Nullable<int> _LastParcelNo;
		
		private System.Nullable<int> _NotifyAdmin;
		
		private System.Nullable<double> _PFuelCharge;
		
		private System.Nullable<double> _GFuelCharge;
		
		private System.Nullable<int> _LastMexicoNo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnControlNoChanging(string value);
    partial void OnControlNoChanged();
    partial void OnLastUIDAssignedChanging(System.Nullable<int> value);
    partial void OnLastUIDAssignedChanged();
    partial void OnLastAirbillAssignedChanging(System.Nullable<int> value);
    partial void OnLastAirbillAssignedChanged();
    partial void OnFailureRetryChanging(System.Nullable<int> value);
    partial void OnFailureRetryChanged();
    partial void OnEntryCommentsChanging(string value);
    partial void OnEntryCommentsChanged();
    partial void OnDisplayEntCommChanging(System.Nullable<bool> value);
    partial void OnDisplayEntCommChanged();
    partial void OnABExpDaysChanging(System.Nullable<int> value);
    partial void OnABExpDaysChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnMaxCustPUChanging(System.Nullable<int> value);
    partial void OnMaxCustPUChanged();
    partial void OnMaxLocPUChanging(System.Nullable<int> value);
    partial void OnMaxLocPUChanged();
    partial void OnNewAccountRequestEmailChanging(string value);
    partial void OnNewAccountRequestEmailChanged();
    partial void OnLastParcelNoChanging(System.Nullable<int> value);
    partial void OnLastParcelNoChanged();
    partial void OnNotifyAdminChanging(System.Nullable<int> value);
    partial void OnNotifyAdminChanged();
    partial void OnPFuelChargeChanging(System.Nullable<double> value);
    partial void OnPFuelChargeChanged();
    partial void OnGFuelChargeChanging(System.Nullable<double> value);
    partial void OnGFuelChargeChanged();
    partial void OnLastMexicoNoChanging(System.Nullable<int> value);
    partial void OnLastMexicoNoChanged();
    #endregion
		
		public WebControl()
		{
			OnCreated();
		}
		
		[Column(Storage="_ControlNo", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ControlNo
		{
			get
			{
				return this._ControlNo;
			}
			set
			{
				if ((this._ControlNo != value))
				{
					this.OnControlNoChanging(value);
					this.SendPropertyChanging();
					this._ControlNo = value;
					this.SendPropertyChanged("ControlNo");
					this.OnControlNoChanged();
				}
			}
		}
		
		[Column(Storage="_LastUIDAssigned", DbType="Int")]
		public System.Nullable<int> LastUIDAssigned
		{
			get
			{
				return this._LastUIDAssigned;
			}
			set
			{
				if ((this._LastUIDAssigned != value))
				{
					this.OnLastUIDAssignedChanging(value);
					this.SendPropertyChanging();
					this._LastUIDAssigned = value;
					this.SendPropertyChanged("LastUIDAssigned");
					this.OnLastUIDAssignedChanged();
				}
			}
		}
		
		[Column(Storage="_LastAirbillAssigned", DbType="Int")]
		public System.Nullable<int> LastAirbillAssigned
		{
			get
			{
				return this._LastAirbillAssigned;
			}
			set
			{
				if ((this._LastAirbillAssigned != value))
				{
					this.OnLastAirbillAssignedChanging(value);
					this.SendPropertyChanging();
					this._LastAirbillAssigned = value;
					this.SendPropertyChanged("LastAirbillAssigned");
					this.OnLastAirbillAssignedChanged();
				}
			}
		}
		
		[Column(Storage="_FailureRetry", DbType="Int")]
		public System.Nullable<int> FailureRetry
		{
			get
			{
				return this._FailureRetry;
			}
			set
			{
				if ((this._FailureRetry != value))
				{
					this.OnFailureRetryChanging(value);
					this.SendPropertyChanging();
					this._FailureRetry = value;
					this.SendPropertyChanged("FailureRetry");
					this.OnFailureRetryChanged();
				}
			}
		}
		
		[Column(Storage="_EntryComments", DbType="VarChar(100)")]
		public string EntryComments
		{
			get
			{
				return this._EntryComments;
			}
			set
			{
				if ((this._EntryComments != value))
				{
					this.OnEntryCommentsChanging(value);
					this.SendPropertyChanging();
					this._EntryComments = value;
					this.SendPropertyChanged("EntryComments");
					this.OnEntryCommentsChanged();
				}
			}
		}
		
		[Column(Storage="_DisplayEntComm", DbType="Bit")]
		public System.Nullable<bool> DisplayEntComm
		{
			get
			{
				return this._DisplayEntComm;
			}
			set
			{
				if ((this._DisplayEntComm != value))
				{
					this.OnDisplayEntCommChanging(value);
					this.SendPropertyChanging();
					this._DisplayEntComm = value;
					this.SendPropertyChanged("DisplayEntComm");
					this.OnDisplayEntCommChanged();
				}
			}
		}
		
		[Column(Storage="_ABExpDays", DbType="Int")]
		public System.Nullable<int> ABExpDays
		{
			get
			{
				return this._ABExpDays;
			}
			set
			{
				if ((this._ABExpDays != value))
				{
					this.OnABExpDaysChanging(value);
					this.SendPropertyChanging();
					this._ABExpDays = value;
					this.SendPropertyChanged("ABExpDays");
					this.OnABExpDaysChanged();
				}
			}
		}
		
		[Column(Storage="_EmailAddress", DbType="Char(30)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[Column(Storage="_MaxCustPU", DbType="Int")]
		public System.Nullable<int> MaxCustPU
		{
			get
			{
				return this._MaxCustPU;
			}
			set
			{
				if ((this._MaxCustPU != value))
				{
					this.OnMaxCustPUChanging(value);
					this.SendPropertyChanging();
					this._MaxCustPU = value;
					this.SendPropertyChanged("MaxCustPU");
					this.OnMaxCustPUChanged();
				}
			}
		}
		
		[Column(Storage="_MaxLocPU", DbType="Int")]
		public System.Nullable<int> MaxLocPU
		{
			get
			{
				return this._MaxLocPU;
			}
			set
			{
				if ((this._MaxLocPU != value))
				{
					this.OnMaxLocPUChanging(value);
					this.SendPropertyChanging();
					this._MaxLocPU = value;
					this.SendPropertyChanged("MaxLocPU");
					this.OnMaxLocPUChanged();
				}
			}
		}
		
		[Column(Storage="_NewAccountRequestEmail", DbType="VarChar(30)")]
		public string NewAccountRequestEmail
		{
			get
			{
				return this._NewAccountRequestEmail;
			}
			set
			{
				if ((this._NewAccountRequestEmail != value))
				{
					this.OnNewAccountRequestEmailChanging(value);
					this.SendPropertyChanging();
					this._NewAccountRequestEmail = value;
					this.SendPropertyChanged("NewAccountRequestEmail");
					this.OnNewAccountRequestEmailChanged();
				}
			}
		}
		
		[Column(Storage="_LastParcelNo", DbType="Int")]
		public System.Nullable<int> LastParcelNo
		{
			get
			{
				return this._LastParcelNo;
			}
			set
			{
				if ((this._LastParcelNo != value))
				{
					this.OnLastParcelNoChanging(value);
					this.SendPropertyChanging();
					this._LastParcelNo = value;
					this.SendPropertyChanged("LastParcelNo");
					this.OnLastParcelNoChanged();
				}
			}
		}
		
		[Column(Storage="_NotifyAdmin", DbType="Int")]
		public System.Nullable<int> NotifyAdmin
		{
			get
			{
				return this._NotifyAdmin;
			}
			set
			{
				if ((this._NotifyAdmin != value))
				{
					this.OnNotifyAdminChanging(value);
					this.SendPropertyChanging();
					this._NotifyAdmin = value;
					this.SendPropertyChanged("NotifyAdmin");
					this.OnNotifyAdminChanged();
				}
			}
		}
		
		[Column(Storage="_PFuelCharge", DbType="Float")]
		public System.Nullable<double> PFuelCharge
		{
			get
			{
				return this._PFuelCharge;
			}
			set
			{
				if ((this._PFuelCharge != value))
				{
					this.OnPFuelChargeChanging(value);
					this.SendPropertyChanging();
					this._PFuelCharge = value;
					this.SendPropertyChanged("PFuelCharge");
					this.OnPFuelChargeChanged();
				}
			}
		}
		
		[Column(Storage="_GFuelCharge", DbType="Float")]
		public System.Nullable<double> GFuelCharge
		{
			get
			{
				return this._GFuelCharge;
			}
			set
			{
				if ((this._GFuelCharge != value))
				{
					this.OnGFuelChargeChanging(value);
					this.SendPropertyChanging();
					this._GFuelCharge = value;
					this.SendPropertyChanged("GFuelCharge");
					this.OnGFuelChargeChanged();
				}
			}
		}
		
		[Column(Storage="_LastMexicoNo", DbType="Int")]
		public System.Nullable<int> LastMexicoNo
		{
			get
			{
				return this._LastMexicoNo;
			}
			set
			{
				if ((this._LastMexicoNo != value))
				{
					this.OnLastMexicoNoChanging(value);
					this.SendPropertyChanging();
					this._LastMexicoNo = value;
					this.SendPropertyChanged("LastMexicoNo");
					this.OnLastMexicoNoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ServiceByZipCode")]
	public partial class ServiceByZipCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ZipCode;
		
		private string _DelivLoc;
		
		private string _CityName;
		
		private string _state;
		
		private string _DelivRouteID;
		
		private string _PURouteID;
		
		private string _SalesRepEmp;
		
		private string _CallInTime;
		
		private string _LastPickUpTime;
		
		private string _WindowTime;
		
		private bool _SameDayService;
		
		private bool _FutureService2;
		
		private bool _EarlyService;
		
		private string _SDSCallinTime;
		
		private string _SDSReadyTime;
		
		private System.Nullable<double> _Lat;
		
		private System.Nullable<double> _Lon;
		
		private string _BServiceTime;
		
		private byte _PickupSchedulingSoonest;
		
		private byte _PickupSchedulingLatest;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    partial void OnDelivLocChanging(string value);
    partial void OnDelivLocChanged();
    partial void OnCityNameChanging(string value);
    partial void OnCityNameChanged();
    partial void OnstateChanging(string value);
    partial void OnstateChanged();
    partial void OnDelivRouteIDChanging(string value);
    partial void OnDelivRouteIDChanged();
    partial void OnPURouteIDChanging(string value);
    partial void OnPURouteIDChanged();
    partial void OnSalesRepEmpChanging(string value);
    partial void OnSalesRepEmpChanged();
    partial void OnCallInTimeChanging(string value);
    partial void OnCallInTimeChanged();
    partial void OnLastPickUpTimeChanging(string value);
    partial void OnLastPickUpTimeChanged();
    partial void OnWindowTimeChanging(string value);
    partial void OnWindowTimeChanged();
    partial void OnSameDayServiceChanging(bool value);
    partial void OnSameDayServiceChanged();
    partial void OnFutureService2Changing(bool value);
    partial void OnFutureService2Changed();
    partial void OnEarlyServiceChanging(bool value);
    partial void OnEarlyServiceChanged();
    partial void OnSDSCallinTimeChanging(string value);
    partial void OnSDSCallinTimeChanged();
    partial void OnSDSReadyTimeChanging(string value);
    partial void OnSDSReadyTimeChanged();
    partial void OnLatChanging(System.Nullable<double> value);
    partial void OnLatChanged();
    partial void OnLonChanging(System.Nullable<double> value);
    partial void OnLonChanged();
    partial void OnBServiceTimeChanging(string value);
    partial void OnBServiceTimeChanged();
    partial void OnPickupSchedulingSoonestChanging(byte value);
    partial void OnPickupSchedulingSoonestChanged();
    partial void OnPickupSchedulingLatestChanging(byte value);
    partial void OnPickupSchedulingLatestChanged();
    #endregion
		
		public ServiceByZipCode()
		{
			OnCreated();
		}
		
		[Column(Storage="_ZipCode", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[Column(Storage="_DelivLoc", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string DelivLoc
		{
			get
			{
				return this._DelivLoc;
			}
			set
			{
				if ((this._DelivLoc != value))
				{
					this.OnDelivLocChanging(value);
					this.SendPropertyChanging();
					this._DelivLoc = value;
					this.SendPropertyChanged("DelivLoc");
					this.OnDelivLocChanged();
				}
			}
		}
		
		[Column(Storage="_CityName", DbType="VarChar(35)")]
		public string CityName
		{
			get
			{
				return this._CityName;
			}
			set
			{
				if ((this._CityName != value))
				{
					this.OnCityNameChanging(value);
					this.SendPropertyChanging();
					this._CityName = value;
					this.SendPropertyChanged("CityName");
					this.OnCityNameChanged();
				}
			}
		}
		
		[Column(Storage="_state", DbType="Char(10)")]
		public string state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[Column(Storage="_DelivRouteID", DbType="VarChar(5)")]
		public string DelivRouteID
		{
			get
			{
				return this._DelivRouteID;
			}
			set
			{
				if ((this._DelivRouteID != value))
				{
					this.OnDelivRouteIDChanging(value);
					this.SendPropertyChanging();
					this._DelivRouteID = value;
					this.SendPropertyChanged("DelivRouteID");
					this.OnDelivRouteIDChanged();
				}
			}
		}
		
		[Column(Storage="_PURouteID", DbType="VarChar(5)")]
		public string PURouteID
		{
			get
			{
				return this._PURouteID;
			}
			set
			{
				if ((this._PURouteID != value))
				{
					this.OnPURouteIDChanging(value);
					this.SendPropertyChanging();
					this._PURouteID = value;
					this.SendPropertyChanged("PURouteID");
					this.OnPURouteIDChanged();
				}
			}
		}
		
		[Column(Storage="_SalesRepEmp", DbType="VarChar(10)")]
		public string SalesRepEmp
		{
			get
			{
				return this._SalesRepEmp;
			}
			set
			{
				if ((this._SalesRepEmp != value))
				{
					this.OnSalesRepEmpChanging(value);
					this.SendPropertyChanging();
					this._SalesRepEmp = value;
					this.SendPropertyChanged("SalesRepEmp");
					this.OnSalesRepEmpChanged();
				}
			}
		}
		
		[Column(Storage="_CallInTime", DbType="Char(5)")]
		public string CallInTime
		{
			get
			{
				return this._CallInTime;
			}
			set
			{
				if ((this._CallInTime != value))
				{
					this.OnCallInTimeChanging(value);
					this.SendPropertyChanging();
					this._CallInTime = value;
					this.SendPropertyChanged("CallInTime");
					this.OnCallInTimeChanged();
				}
			}
		}
		
		[Column(Storage="_LastPickUpTime", DbType="Char(5)")]
		public string LastPickUpTime
		{
			get
			{
				return this._LastPickUpTime;
			}
			set
			{
				if ((this._LastPickUpTime != value))
				{
					this.OnLastPickUpTimeChanging(value);
					this.SendPropertyChanging();
					this._LastPickUpTime = value;
					this.SendPropertyChanged("LastPickUpTime");
					this.OnLastPickUpTimeChanged();
				}
			}
		}
		
		[Column(Storage="_WindowTime", DbType="Char(5)")]
		public string WindowTime
		{
			get
			{
				return this._WindowTime;
			}
			set
			{
				if ((this._WindowTime != value))
				{
					this.OnWindowTimeChanging(value);
					this.SendPropertyChanging();
					this._WindowTime = value;
					this.SendPropertyChanged("WindowTime");
					this.OnWindowTimeChanged();
				}
			}
		}
		
		[Column(Storage="_SameDayService", DbType="Bit NOT NULL")]
		public bool SameDayService
		{
			get
			{
				return this._SameDayService;
			}
			set
			{
				if ((this._SameDayService != value))
				{
					this.OnSameDayServiceChanging(value);
					this.SendPropertyChanging();
					this._SameDayService = value;
					this.SendPropertyChanged("SameDayService");
					this.OnSameDayServiceChanged();
				}
			}
		}
		
		[Column(Storage="_FutureService2", DbType="Bit NOT NULL")]
		public bool FutureService2
		{
			get
			{
				return this._FutureService2;
			}
			set
			{
				if ((this._FutureService2 != value))
				{
					this.OnFutureService2Changing(value);
					this.SendPropertyChanging();
					this._FutureService2 = value;
					this.SendPropertyChanged("FutureService2");
					this.OnFutureService2Changed();
				}
			}
		}
		
		[Column(Storage="_EarlyService", DbType="Bit NOT NULL")]
		public bool EarlyService
		{
			get
			{
				return this._EarlyService;
			}
			set
			{
				if ((this._EarlyService != value))
				{
					this.OnEarlyServiceChanging(value);
					this.SendPropertyChanging();
					this._EarlyService = value;
					this.SendPropertyChanged("EarlyService");
					this.OnEarlyServiceChanged();
				}
			}
		}
		
		[Column(Storage="_SDSCallinTime", DbType="Char(5)")]
		public string SDSCallinTime
		{
			get
			{
				return this._SDSCallinTime;
			}
			set
			{
				if ((this._SDSCallinTime != value))
				{
					this.OnSDSCallinTimeChanging(value);
					this.SendPropertyChanging();
					this._SDSCallinTime = value;
					this.SendPropertyChanged("SDSCallinTime");
					this.OnSDSCallinTimeChanged();
				}
			}
		}
		
		[Column(Storage="_SDSReadyTime", DbType="Char(5)")]
		public string SDSReadyTime
		{
			get
			{
				return this._SDSReadyTime;
			}
			set
			{
				if ((this._SDSReadyTime != value))
				{
					this.OnSDSReadyTimeChanging(value);
					this.SendPropertyChanging();
					this._SDSReadyTime = value;
					this.SendPropertyChanged("SDSReadyTime");
					this.OnSDSReadyTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Lat", DbType="Float")]
		public System.Nullable<double> Lat
		{
			get
			{
				return this._Lat;
			}
			set
			{
				if ((this._Lat != value))
				{
					this.OnLatChanging(value);
					this.SendPropertyChanging();
					this._Lat = value;
					this.SendPropertyChanged("Lat");
					this.OnLatChanged();
				}
			}
		}
		
		[Column(Storage="_Lon", DbType="Float")]
		public System.Nullable<double> Lon
		{
			get
			{
				return this._Lon;
			}
			set
			{
				if ((this._Lon != value))
				{
					this.OnLonChanging(value);
					this.SendPropertyChanging();
					this._Lon = value;
					this.SendPropertyChanged("Lon");
					this.OnLonChanged();
				}
			}
		}
		
		[Column(Storage="_BServiceTime", DbType="Char(5)")]
		public string BServiceTime
		{
			get
			{
				return this._BServiceTime;
			}
			set
			{
				if ((this._BServiceTime != value))
				{
					this.OnBServiceTimeChanging(value);
					this.SendPropertyChanging();
					this._BServiceTime = value;
					this.SendPropertyChanged("BServiceTime");
					this.OnBServiceTimeChanged();
				}
			}
		}
		
		[Column(Storage="_PickupSchedulingSoonest", DbType="TinyInt NOT NULL")]
		public byte PickupSchedulingSoonest
		{
			get
			{
				return this._PickupSchedulingSoonest;
			}
			set
			{
				if ((this._PickupSchedulingSoonest != value))
				{
					this.OnPickupSchedulingSoonestChanging(value);
					this.SendPropertyChanging();
					this._PickupSchedulingSoonest = value;
					this.SendPropertyChanged("PickupSchedulingSoonest");
					this.OnPickupSchedulingSoonestChanged();
				}
			}
		}
		
		[Column(Storage="_PickupSchedulingLatest", DbType="TinyInt NOT NULL")]
		public byte PickupSchedulingLatest
		{
			get
			{
				return this._PickupSchedulingLatest;
			}
			set
			{
				if ((this._PickupSchedulingLatest != value))
				{
					this.OnPickupSchedulingLatestChanging(value);
					this.SendPropertyChanging();
					this._PickupSchedulingLatest = value;
					this.SendPropertyChanged("PickupSchedulingLatest");
					this.OnPickupSchedulingLatestChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.WebDispatch")]
	public partial class WebDispatch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DispatchID;
		
		private System.Nullable<int> _CustID;
		
		private System.Nullable<int> _LocID;
		
		private string _RouteID;
		
		private string _AfterRouteID;
		
		private string _CityCode;
		
		private string _DispatchHub;
		
		private string _DelivHub;
		
		private string _Destination;
		
		private string _PickupContact;
		
		private string _PickUpTime;
		
		private bool _OSD;
		
		private bool _Dolly;
		
		private string _SpcInstructions;
		
		private string _LastPickUpTime;
		
		private System.Nullable<System.DateTime> _DateTimeCalledIn;
		
		private string _CloseTime;
		
		private string _ReadyTime;
		
		private string _DispatchTime;
		
		private string _LastEditPUEmp;
		
		private System.Nullable<System.DateTime> _LastEditPUDateTime;
		
		private bool _PickedUp;
		
		private string _PickUpConfirmation;
		
		private string _PickUpComments;
		
		private bool _SentRequest;
		
		private string _CoName;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _City;
		
		private string _State;
		
		private string _Zip;
		
		private string _Phone;
		
		private string _PhoneExt;
		
		private System.Nullable<int> _PUPieces;
		
		private System.Nullable<int> _TotalPUWeight;
		
		private bool _CancelPURequest;
		
		private bool _IsSentToOPS;
		
		private System.Nullable<bool> _KnownShipper;
		
		private System.DateTime _PickupDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDispatchIDChanging(int value);
    partial void OnDispatchIDChanged();
    partial void OnCustIDChanging(System.Nullable<int> value);
    partial void OnCustIDChanged();
    partial void OnLocIDChanging(System.Nullable<int> value);
    partial void OnLocIDChanged();
    partial void OnRouteIDChanging(string value);
    partial void OnRouteIDChanged();
    partial void OnAfterRouteIDChanging(string value);
    partial void OnAfterRouteIDChanged();
    partial void OnCityCodeChanging(string value);
    partial void OnCityCodeChanged();
    partial void OnDispatchHubChanging(string value);
    partial void OnDispatchHubChanged();
    partial void OnDelivHubChanging(string value);
    partial void OnDelivHubChanged();
    partial void OnDestinationChanging(string value);
    partial void OnDestinationChanged();
    partial void OnPickupContactChanging(string value);
    partial void OnPickupContactChanged();
    partial void OnPickUpTimeChanging(string value);
    partial void OnPickUpTimeChanged();
    partial void OnOSDChanging(bool value);
    partial void OnOSDChanged();
    partial void OnDollyChanging(bool value);
    partial void OnDollyChanged();
    partial void OnSpcInstructionsChanging(string value);
    partial void OnSpcInstructionsChanged();
    partial void OnLastPickUpTimeChanging(string value);
    partial void OnLastPickUpTimeChanged();
    partial void OnDateTimeCalledInChanging(System.Nullable<System.DateTime> value);
    partial void OnDateTimeCalledInChanged();
    partial void OnCloseTimeChanging(string value);
    partial void OnCloseTimeChanged();
    partial void OnReadyTimeChanging(string value);
    partial void OnReadyTimeChanged();
    partial void OnDispatchTimeChanging(string value);
    partial void OnDispatchTimeChanged();
    partial void OnLastEditPUEmpChanging(string value);
    partial void OnLastEditPUEmpChanged();
    partial void OnLastEditPUDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastEditPUDateTimeChanged();
    partial void OnPickedUpChanging(bool value);
    partial void OnPickedUpChanged();
    partial void OnPickUpConfirmationChanging(string value);
    partial void OnPickUpConfirmationChanged();
    partial void OnPickUpCommentsChanging(string value);
    partial void OnPickUpCommentsChanged();
    partial void OnSentRequestChanging(bool value);
    partial void OnSentRequestChanged();
    partial void OnCoNameChanging(string value);
    partial void OnCoNameChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnPhoneExtChanging(string value);
    partial void OnPhoneExtChanged();
    partial void OnPUPiecesChanging(System.Nullable<int> value);
    partial void OnPUPiecesChanged();
    partial void OnTotalPUWeightChanging(System.Nullable<int> value);
    partial void OnTotalPUWeightChanged();
    partial void OnCancelPURequestChanging(bool value);
    partial void OnCancelPURequestChanged();
    partial void OnIsSentToOPSChanging(bool value);
    partial void OnIsSentToOPSChanged();
    partial void OnKnownShipperChanging(System.Nullable<bool> value);
    partial void OnKnownShipperChanged();
    partial void OnPickupDateChanging(System.DateTime value);
    partial void OnPickupDateChanged();
    #endregion
		
		public WebDispatch()
		{
			OnCreated();
		}
		
		[Column(Storage="_DispatchID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DispatchID
		{
			get
			{
				return this._DispatchID;
			}
			set
			{
				if ((this._DispatchID != value))
				{
					this.OnDispatchIDChanging(value);
					this.SendPropertyChanging();
					this._DispatchID = value;
					this.SendPropertyChanged("DispatchID");
					this.OnDispatchIDChanged();
				}
			}
		}
		
		[Column(Storage="_CustID", DbType="Int")]
		public System.Nullable<int> CustID
		{
			get
			{
				return this._CustID;
			}
			set
			{
				if ((this._CustID != value))
				{
					this.OnCustIDChanging(value);
					this.SendPropertyChanging();
					this._CustID = value;
					this.SendPropertyChanged("CustID");
					this.OnCustIDChanged();
				}
			}
		}
		
		[Column(Storage="_LocID", DbType="Int")]
		public System.Nullable<int> LocID
		{
			get
			{
				return this._LocID;
			}
			set
			{
				if ((this._LocID != value))
				{
					this.OnLocIDChanging(value);
					this.SendPropertyChanging();
					this._LocID = value;
					this.SendPropertyChanged("LocID");
					this.OnLocIDChanged();
				}
			}
		}
		
		[Column(Storage="_RouteID", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string RouteID
		{
			get
			{
				return this._RouteID;
			}
			set
			{
				if ((this._RouteID != value))
				{
					this.OnRouteIDChanging(value);
					this.SendPropertyChanging();
					this._RouteID = value;
					this.SendPropertyChanged("RouteID");
					this.OnRouteIDChanged();
				}
			}
		}
		
		[Column(Storage="_AfterRouteID", DbType="VarChar(5)")]
		public string AfterRouteID
		{
			get
			{
				return this._AfterRouteID;
			}
			set
			{
				if ((this._AfterRouteID != value))
				{
					this.OnAfterRouteIDChanging(value);
					this.SendPropertyChanging();
					this._AfterRouteID = value;
					this.SendPropertyChanged("AfterRouteID");
					this.OnAfterRouteIDChanged();
				}
			}
		}
		
		[Column(Storage="_CityCode", DbType="Char(3)")]
		public string CityCode
		{
			get
			{
				return this._CityCode;
			}
			set
			{
				if ((this._CityCode != value))
				{
					this.OnCityCodeChanging(value);
					this.SendPropertyChanging();
					this._CityCode = value;
					this.SendPropertyChanged("CityCode");
					this.OnCityCodeChanged();
				}
			}
		}
		
		[Column(Storage="_DispatchHub", DbType="Char(3)")]
		public string DispatchHub
		{
			get
			{
				return this._DispatchHub;
			}
			set
			{
				if ((this._DispatchHub != value))
				{
					this.OnDispatchHubChanging(value);
					this.SendPropertyChanging();
					this._DispatchHub = value;
					this.SendPropertyChanged("DispatchHub");
					this.OnDispatchHubChanged();
				}
			}
		}
		
		[Column(Storage="_DelivHub", DbType="Char(10)")]
		public string DelivHub
		{
			get
			{
				return this._DelivHub;
			}
			set
			{
				if ((this._DelivHub != value))
				{
					this.OnDelivHubChanging(value);
					this.SendPropertyChanging();
					this._DelivHub = value;
					this.SendPropertyChanged("DelivHub");
					this.OnDelivHubChanged();
				}
			}
		}
		
		[Column(Storage="_Destination", DbType="VarChar(20)")]
		public string Destination
		{
			get
			{
				return this._Destination;
			}
			set
			{
				if ((this._Destination != value))
				{
					this.OnDestinationChanging(value);
					this.SendPropertyChanging();
					this._Destination = value;
					this.SendPropertyChanged("Destination");
					this.OnDestinationChanged();
				}
			}
		}
		
		[Column(Storage="_PickupContact", DbType="VarChar(50)")]
		public string PickupContact
		{
			get
			{
				return this._PickupContact;
			}
			set
			{
				if ((this._PickupContact != value))
				{
					this.OnPickupContactChanging(value);
					this.SendPropertyChanging();
					this._PickupContact = value;
					this.SendPropertyChanged("PickupContact");
					this.OnPickupContactChanged();
				}
			}
		}
		
		[Column(Storage="_PickUpTime", DbType="Char(5)")]
		public string PickUpTime
		{
			get
			{
				return this._PickUpTime;
			}
			set
			{
				if ((this._PickUpTime != value))
				{
					this.OnPickUpTimeChanging(value);
					this.SendPropertyChanging();
					this._PickUpTime = value;
					this.SendPropertyChanged("PickUpTime");
					this.OnPickUpTimeChanged();
				}
			}
		}
		
		[Column(Storage="_OSD", DbType="Bit NOT NULL")]
		public bool OSD
		{
			get
			{
				return this._OSD;
			}
			set
			{
				if ((this._OSD != value))
				{
					this.OnOSDChanging(value);
					this.SendPropertyChanging();
					this._OSD = value;
					this.SendPropertyChanged("OSD");
					this.OnOSDChanged();
				}
			}
		}
		
		[Column(Storage="_Dolly", DbType="Bit NOT NULL")]
		public bool Dolly
		{
			get
			{
				return this._Dolly;
			}
			set
			{
				if ((this._Dolly != value))
				{
					this.OnDollyChanging(value);
					this.SendPropertyChanging();
					this._Dolly = value;
					this.SendPropertyChanged("Dolly");
					this.OnDollyChanged();
				}
			}
		}
		
		[Column(Storage="_SpcInstructions", DbType="VarChar(50)")]
		public string SpcInstructions
		{
			get
			{
				return this._SpcInstructions;
			}
			set
			{
				if ((this._SpcInstructions != value))
				{
					this.OnSpcInstructionsChanging(value);
					this.SendPropertyChanging();
					this._SpcInstructions = value;
					this.SendPropertyChanged("SpcInstructions");
					this.OnSpcInstructionsChanged();
				}
			}
		}
		
		[Column(Storage="_LastPickUpTime", DbType="Char(5)")]
		public string LastPickUpTime
		{
			get
			{
				return this._LastPickUpTime;
			}
			set
			{
				if ((this._LastPickUpTime != value))
				{
					this.OnLastPickUpTimeChanging(value);
					this.SendPropertyChanging();
					this._LastPickUpTime = value;
					this.SendPropertyChanged("LastPickUpTime");
					this.OnLastPickUpTimeChanged();
				}
			}
		}
		
		[Column(Storage="_DateTimeCalledIn", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateTimeCalledIn
		{
			get
			{
				return this._DateTimeCalledIn;
			}
			set
			{
				if ((this._DateTimeCalledIn != value))
				{
					this.OnDateTimeCalledInChanging(value);
					this.SendPropertyChanging();
					this._DateTimeCalledIn = value;
					this.SendPropertyChanged("DateTimeCalledIn");
					this.OnDateTimeCalledInChanged();
				}
			}
		}
		
		[Column(Storage="_CloseTime", DbType="Char(5)")]
		public string CloseTime
		{
			get
			{
				return this._CloseTime;
			}
			set
			{
				if ((this._CloseTime != value))
				{
					this.OnCloseTimeChanging(value);
					this.SendPropertyChanging();
					this._CloseTime = value;
					this.SendPropertyChanged("CloseTime");
					this.OnCloseTimeChanged();
				}
			}
		}
		
		[Column(Storage="_ReadyTime", DbType="Char(5)")]
		public string ReadyTime
		{
			get
			{
				return this._ReadyTime;
			}
			set
			{
				if ((this._ReadyTime != value))
				{
					this.OnReadyTimeChanging(value);
					this.SendPropertyChanging();
					this._ReadyTime = value;
					this.SendPropertyChanged("ReadyTime");
					this.OnReadyTimeChanged();
				}
			}
		}
		
		[Column(Storage="_DispatchTime", DbType="Char(5)")]
		public string DispatchTime
		{
			get
			{
				return this._DispatchTime;
			}
			set
			{
				if ((this._DispatchTime != value))
				{
					this.OnDispatchTimeChanging(value);
					this.SendPropertyChanging();
					this._DispatchTime = value;
					this.SendPropertyChanged("DispatchTime");
					this.OnDispatchTimeChanged();
				}
			}
		}
		
		[Column(Storage="_LastEditPUEmp", DbType="VarChar(25)")]
		public string LastEditPUEmp
		{
			get
			{
				return this._LastEditPUEmp;
			}
			set
			{
				if ((this._LastEditPUEmp != value))
				{
					this.OnLastEditPUEmpChanging(value);
					this.SendPropertyChanging();
					this._LastEditPUEmp = value;
					this.SendPropertyChanged("LastEditPUEmp");
					this.OnLastEditPUEmpChanged();
				}
			}
		}
		
		[Column(Storage="_LastEditPUDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastEditPUDateTime
		{
			get
			{
				return this._LastEditPUDateTime;
			}
			set
			{
				if ((this._LastEditPUDateTime != value))
				{
					this.OnLastEditPUDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastEditPUDateTime = value;
					this.SendPropertyChanged("LastEditPUDateTime");
					this.OnLastEditPUDateTimeChanged();
				}
			}
		}
		
		[Column(Storage="_PickedUp", DbType="Bit NOT NULL")]
		public bool PickedUp
		{
			get
			{
				return this._PickedUp;
			}
			set
			{
				if ((this._PickedUp != value))
				{
					this.OnPickedUpChanging(value);
					this.SendPropertyChanging();
					this._PickedUp = value;
					this.SendPropertyChanged("PickedUp");
					this.OnPickedUpChanged();
				}
			}
		}
		
		[Column(Storage="_PickUpConfirmation", DbType="Char(10)")]
		public string PickUpConfirmation
		{
			get
			{
				return this._PickUpConfirmation;
			}
			set
			{
				if ((this._PickUpConfirmation != value))
				{
					this.OnPickUpConfirmationChanging(value);
					this.SendPropertyChanging();
					this._PickUpConfirmation = value;
					this.SendPropertyChanged("PickUpConfirmation");
					this.OnPickUpConfirmationChanged();
				}
			}
		}
		
		[Column(Storage="_PickUpComments", DbType="VarChar(50)")]
		public string PickUpComments
		{
			get
			{
				return this._PickUpComments;
			}
			set
			{
				if ((this._PickUpComments != value))
				{
					this.OnPickUpCommentsChanging(value);
					this.SendPropertyChanging();
					this._PickUpComments = value;
					this.SendPropertyChanged("PickUpComments");
					this.OnPickUpCommentsChanged();
				}
			}
		}
		
		[Column(Storage="_SentRequest", DbType="Bit NOT NULL")]
		public bool SentRequest
		{
			get
			{
				return this._SentRequest;
			}
			set
			{
				if ((this._SentRequest != value))
				{
					this.OnSentRequestChanging(value);
					this.SendPropertyChanging();
					this._SentRequest = value;
					this.SendPropertyChanged("SentRequest");
					this.OnSentRequestChanged();
				}
			}
		}
		
		[Column(Storage="_CoName", DbType="VarChar(40)")]
		public string CoName
		{
			get
			{
				return this._CoName;
			}
			set
			{
				if ((this._CoName != value))
				{
					this.OnCoNameChanging(value);
					this.SendPropertyChanging();
					this._CoName = value;
					this.SendPropertyChanged("CoName");
					this.OnCoNameChanged();
				}
			}
		}
		
		[Column(Storage="_Address1", DbType="VarChar(60)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[Column(Storage="_Address2", DbType="VarChar(60)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[Column(Storage="_City", DbType="VarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[Column(Storage="_State", DbType="Char(2)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[Column(Storage="_Zip", DbType="Char(10)")]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[Column(Storage="_Phone", DbType="VarChar(10)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[Column(Storage="_PhoneExt", DbType="VarChar(5)")]
		public string PhoneExt
		{
			get
			{
				return this._PhoneExt;
			}
			set
			{
				if ((this._PhoneExt != value))
				{
					this.OnPhoneExtChanging(value);
					this.SendPropertyChanging();
					this._PhoneExt = value;
					this.SendPropertyChanged("PhoneExt");
					this.OnPhoneExtChanged();
				}
			}
		}
		
		[Column(Storage="_PUPieces", DbType="Int")]
		public System.Nullable<int> PUPieces
		{
			get
			{
				return this._PUPieces;
			}
			set
			{
				if ((this._PUPieces != value))
				{
					this.OnPUPiecesChanging(value);
					this.SendPropertyChanging();
					this._PUPieces = value;
					this.SendPropertyChanged("PUPieces");
					this.OnPUPiecesChanged();
				}
			}
		}
		
		[Column(Storage="_TotalPUWeight", DbType="Int")]
		public System.Nullable<int> TotalPUWeight
		{
			get
			{
				return this._TotalPUWeight;
			}
			set
			{
				if ((this._TotalPUWeight != value))
				{
					this.OnTotalPUWeightChanging(value);
					this.SendPropertyChanging();
					this._TotalPUWeight = value;
					this.SendPropertyChanged("TotalPUWeight");
					this.OnTotalPUWeightChanged();
				}
			}
		}
		
		[Column(Storage="_CancelPURequest", DbType="Bit NOT NULL")]
		public bool CancelPURequest
		{
			get
			{
				return this._CancelPURequest;
			}
			set
			{
				if ((this._CancelPURequest != value))
				{
					this.OnCancelPURequestChanging(value);
					this.SendPropertyChanging();
					this._CancelPURequest = value;
					this.SendPropertyChanged("CancelPURequest");
					this.OnCancelPURequestChanged();
				}
			}
		}
		
		[Column(Storage="_IsSentToOPS", DbType="Bit NOT NULL")]
		public bool IsSentToOPS
		{
			get
			{
				return this._IsSentToOPS;
			}
			set
			{
				if ((this._IsSentToOPS != value))
				{
					this.OnIsSentToOPSChanging(value);
					this.SendPropertyChanging();
					this._IsSentToOPS = value;
					this.SendPropertyChanged("IsSentToOPS");
					this.OnIsSentToOPSChanged();
				}
			}
		}
		
		[Column(Storage="_KnownShipper", DbType="Bit")]
		public System.Nullable<bool> KnownShipper
		{
			get
			{
				return this._KnownShipper;
			}
			set
			{
				if ((this._KnownShipper != value))
				{
					this.OnKnownShipperChanging(value);
					this.SendPropertyChanging();
					this._KnownShipper = value;
					this.SendPropertyChanged("KnownShipper");
					this.OnKnownShipperChanged();
				}
			}
		}
		
		[Column(Storage="_PickupDate", DbType="DateTime NOT NULL")]
		public System.DateTime PickupDate
		{
			get
			{
				return this._PickupDate;
			}
			set
			{
				if ((this._PickupDate != value))
				{
					this.OnPickupDateChanging(value);
					this.SendPropertyChanging();
					this._PickupDate = value;
					this.SendPropertyChanged("PickupDate");
					this.OnPickupDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Holidays")]
	public partial class Holiday
	{
		
		private System.DateTime _Holiday1;
		
		private System.Nullable<System.DateTime> _NextDelivDate;
		
		public Holiday()
		{
		}
		
		[Column(Name="Holiday", Storage="_Holiday1", DbType="DateTime NOT NULL")]
		public System.DateTime Holiday1
		{
			get
			{
				return this._Holiday1;
			}
			set
			{
				if ((this._Holiday1 != value))
				{
					this._Holiday1 = value;
				}
			}
		}
		
		[Column(Storage="_NextDelivDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> NextDelivDate
		{
			get
			{
				return this._NextDelivDate;
			}
			set
			{
				if ((this._NextDelivDate != value))
				{
					this._NextDelivDate = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.UserProfile")]
	public partial class UserProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UID;
		
		private string _LoginName;
		
		private string _UserFirstName;
		
		private string _UserLastName;
		
		private string _UserEmail;
		
		private string _UserPWD;
		
		private System.Nullable<bool> _Administrator;
		
		private System.Nullable<int> _CustID;
		
		private string _CompanyName;
		
		private string _CompanyPhone;
		
		private string _CompanyAddress1;
		
		private string _CompanyAddress2;
		
		private string _CompanyCity;
		
		private string _CompanyState;
		
		private string _CompanyZip;
		
		private System.Nullable<System.DateTime> _LastLoginDate;
		
		private int _LoginsToDate;
		
		private short _LoginAttemptsToday;
		
		private short _LoginFailedToday;
		
		private System.Nullable<System.DateTime> _PWDChangedLast;
		
		private System.Nullable<System.DateTime> _PWDResentLast;
		
		private int _PWDResentCount;
		
		private short _PWDResentToday;
		
		private int _ABEntryToday;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<bool> _AccountLockout;
		
		private int _PrintToLabel;
		
		private System.Nullable<char> _DefaultService;
		
		private System.Nullable<bool> _BillingRefRequired;
		
		private System.Nullable<bool> _EmailPOD;
		
		private bool _SuperWebShipper;
		
		private bool _UseLocBillingRef;
		
		private decimal _HandlingFee;
		
		private bool _PrintPublishedRates;
		
		private bool _IsUserAdmin;
		
		private bool _Active;
		
		private bool _ShowOnlyUserShipments;
		
		private bool _DisableBillingReferenceRequired;
		
		private bool _HardCodeBillingRef;
		
		private string _HardCodedBillingRefValue;
		
		private bool _HardCodeBillingRef2;
		
		private string _HardCodedBillingRefValue2;
		
		private System.Nullable<System.Guid> _newCustomerReferralSourceID;
		
		private string _ActivityNotes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(int value);
    partial void OnUIDChanged();
    partial void OnLoginNameChanging(string value);
    partial void OnLoginNameChanged();
    partial void OnUserFirstNameChanging(string value);
    partial void OnUserFirstNameChanged();
    partial void OnUserLastNameChanging(string value);
    partial void OnUserLastNameChanged();
    partial void OnUserEmailChanging(string value);
    partial void OnUserEmailChanged();
    partial void OnUserPWDChanging(string value);
    partial void OnUserPWDChanged();
    partial void OnAdministratorChanging(System.Nullable<bool> value);
    partial void OnAdministratorChanged();
    partial void OnCustIDChanging(System.Nullable<int> value);
    partial void OnCustIDChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnCompanyPhoneChanging(string value);
    partial void OnCompanyPhoneChanged();
    partial void OnCompanyAddress1Changing(string value);
    partial void OnCompanyAddress1Changed();
    partial void OnCompanyAddress2Changing(string value);
    partial void OnCompanyAddress2Changed();
    partial void OnCompanyCityChanging(string value);
    partial void OnCompanyCityChanged();
    partial void OnCompanyStateChanging(string value);
    partial void OnCompanyStateChanged();
    partial void OnCompanyZipChanging(string value);
    partial void OnCompanyZipChanged();
    partial void OnLastLoginDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLoginDateChanged();
    partial void OnLoginsToDateChanging(int value);
    partial void OnLoginsToDateChanged();
    partial void OnLoginAttemptsTodayChanging(short value);
    partial void OnLoginAttemptsTodayChanged();
    partial void OnLoginFailedTodayChanging(short value);
    partial void OnLoginFailedTodayChanged();
    partial void OnPWDChangedLastChanging(System.Nullable<System.DateTime> value);
    partial void OnPWDChangedLastChanged();
    partial void OnPWDResentLastChanging(System.Nullable<System.DateTime> value);
    partial void OnPWDResentLastChanged();
    partial void OnPWDResentCountChanging(int value);
    partial void OnPWDResentCountChanged();
    partial void OnPWDResentTodayChanging(short value);
    partial void OnPWDResentTodayChanged();
    partial void OnABEntryTodayChanging(int value);
    partial void OnABEntryTodayChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnAccountLockoutChanging(System.Nullable<bool> value);
    partial void OnAccountLockoutChanged();
    partial void OnPrintToLabelChanging(int value);
    partial void OnPrintToLabelChanged();
    partial void OnDefaultServiceChanging(System.Nullable<char> value);
    partial void OnDefaultServiceChanged();
    partial void OnBillingRefRequiredChanging(System.Nullable<bool> value);
    partial void OnBillingRefRequiredChanged();
    partial void OnEmailPODChanging(System.Nullable<bool> value);
    partial void OnEmailPODChanged();
    partial void OnSuperWebShipperChanging(bool value);
    partial void OnSuperWebShipperChanged();
    partial void OnUseLocBillingRefChanging(bool value);
    partial void OnUseLocBillingRefChanged();
    partial void OnHandlingFeeChanging(decimal value);
    partial void OnHandlingFeeChanged();
    partial void OnPrintPublishedRatesChanging(bool value);
    partial void OnPrintPublishedRatesChanged();
    partial void OnIsUserAdminChanging(bool value);
    partial void OnIsUserAdminChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnShowOnlyUserShipmentsChanging(bool value);
    partial void OnShowOnlyUserShipmentsChanged();
    partial void OnDisableBillingReferenceRequiredChanging(bool value);
    partial void OnDisableBillingReferenceRequiredChanged();
    partial void OnHardCodeBillingRefChanging(bool value);
    partial void OnHardCodeBillingRefChanged();
    partial void OnHardCodedBillingRefValueChanging(string value);
    partial void OnHardCodedBillingRefValueChanged();
    partial void OnHardCodeBillingRef2Changing(bool value);
    partial void OnHardCodeBillingRef2Changed();
    partial void OnHardCodedBillingRefValue2Changing(string value);
    partial void OnHardCodedBillingRefValue2Changed();
    partial void OnnewCustomerReferralSourceIDChanging(System.Nullable<System.Guid> value);
    partial void OnnewCustomerReferralSourceIDChanged();
    partial void OnActivityNotesChanging(string value);
    partial void OnActivityNotesChanged();
    #endregion
		
		public UserProfile()
		{
			OnCreated();
		}
		
		[Column(Storage="_UID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[Column(Storage="_LoginName", DbType="Char(20)")]
		public string LoginName
		{
			get
			{
				return this._LoginName;
			}
			set
			{
				if ((this._LoginName != value))
				{
					this.OnLoginNameChanging(value);
					this.SendPropertyChanging();
					this._LoginName = value;
					this.SendPropertyChanged("LoginName");
					this.OnLoginNameChanged();
				}
			}
		}
		
		[Column(Storage="_UserFirstName", DbType="VarChar(20)")]
		public string UserFirstName
		{
			get
			{
				return this._UserFirstName;
			}
			set
			{
				if ((this._UserFirstName != value))
				{
					this.OnUserFirstNameChanging(value);
					this.SendPropertyChanging();
					this._UserFirstName = value;
					this.SendPropertyChanged("UserFirstName");
					this.OnUserFirstNameChanged();
				}
			}
		}
		
		[Column(Storage="_UserLastName", DbType="VarChar(20)")]
		public string UserLastName
		{
			get
			{
				return this._UserLastName;
			}
			set
			{
				if ((this._UserLastName != value))
				{
					this.OnUserLastNameChanging(value);
					this.SendPropertyChanging();
					this._UserLastName = value;
					this.SendPropertyChanged("UserLastName");
					this.OnUserLastNameChanged();
				}
			}
		}
		
		[Column(Storage="_UserEmail", DbType="VarChar(60)")]
		public string UserEmail
		{
			get
			{
				return this._UserEmail;
			}
			set
			{
				if ((this._UserEmail != value))
				{
					this.OnUserEmailChanging(value);
					this.SendPropertyChanging();
					this._UserEmail = value;
					this.SendPropertyChanged("UserEmail");
					this.OnUserEmailChanged();
				}
			}
		}
		
		[Column(Storage="_UserPWD", DbType="VarChar(10)")]
		public string UserPWD
		{
			get
			{
				return this._UserPWD;
			}
			set
			{
				if ((this._UserPWD != value))
				{
					this.OnUserPWDChanging(value);
					this.SendPropertyChanging();
					this._UserPWD = value;
					this.SendPropertyChanged("UserPWD");
					this.OnUserPWDChanged();
				}
			}
		}
		
		[Column(Storage="_Administrator", DbType="Bit")]
		public System.Nullable<bool> Administrator
		{
			get
			{
				return this._Administrator;
			}
			set
			{
				if ((this._Administrator != value))
				{
					this.OnAdministratorChanging(value);
					this.SendPropertyChanging();
					this._Administrator = value;
					this.SendPropertyChanged("Administrator");
					this.OnAdministratorChanged();
				}
			}
		}
		
		[Column(Storage="_CustID", DbType="Int")]
		public System.Nullable<int> CustID
		{
			get
			{
				return this._CustID;
			}
			set
			{
				if ((this._CustID != value))
				{
					this.OnCustIDChanging(value);
					this.SendPropertyChanging();
					this._CustID = value;
					this.SendPropertyChanged("CustID");
					this.OnCustIDChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyName", DbType="VarChar(40)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyPhone", DbType="VarChar(20)")]
		public string CompanyPhone
		{
			get
			{
				return this._CompanyPhone;
			}
			set
			{
				if ((this._CompanyPhone != value))
				{
					this.OnCompanyPhoneChanging(value);
					this.SendPropertyChanging();
					this._CompanyPhone = value;
					this.SendPropertyChanged("CompanyPhone");
					this.OnCompanyPhoneChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyAddress1", DbType="VarChar(30)")]
		public string CompanyAddress1
		{
			get
			{
				return this._CompanyAddress1;
			}
			set
			{
				if ((this._CompanyAddress1 != value))
				{
					this.OnCompanyAddress1Changing(value);
					this.SendPropertyChanging();
					this._CompanyAddress1 = value;
					this.SendPropertyChanged("CompanyAddress1");
					this.OnCompanyAddress1Changed();
				}
			}
		}
		
		[Column(Storage="_CompanyAddress2", DbType="VarChar(30)")]
		public string CompanyAddress2
		{
			get
			{
				return this._CompanyAddress2;
			}
			set
			{
				if ((this._CompanyAddress2 != value))
				{
					this.OnCompanyAddress2Changing(value);
					this.SendPropertyChanging();
					this._CompanyAddress2 = value;
					this.SendPropertyChanged("CompanyAddress2");
					this.OnCompanyAddress2Changed();
				}
			}
		}
		
		[Column(Storage="_CompanyCity", DbType="VarChar(30)")]
		public string CompanyCity
		{
			get
			{
				return this._CompanyCity;
			}
			set
			{
				if ((this._CompanyCity != value))
				{
					this.OnCompanyCityChanging(value);
					this.SendPropertyChanging();
					this._CompanyCity = value;
					this.SendPropertyChanged("CompanyCity");
					this.OnCompanyCityChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyState", DbType="VarChar(2)")]
		public string CompanyState
		{
			get
			{
				return this._CompanyState;
			}
			set
			{
				if ((this._CompanyState != value))
				{
					this.OnCompanyStateChanging(value);
					this.SendPropertyChanging();
					this._CompanyState = value;
					this.SendPropertyChanged("CompanyState");
					this.OnCompanyStateChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyZip", DbType="VarChar(9)")]
		public string CompanyZip
		{
			get
			{
				return this._CompanyZip;
			}
			set
			{
				if ((this._CompanyZip != value))
				{
					this.OnCompanyZipChanging(value);
					this.SendPropertyChanging();
					this._CompanyZip = value;
					this.SendPropertyChanged("CompanyZip");
					this.OnCompanyZipChanged();
				}
			}
		}
		
		[Column(Storage="_LastLoginDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[Column(Storage="_LoginsToDate", DbType="Int NOT NULL")]
		public int LoginsToDate
		{
			get
			{
				return this._LoginsToDate;
			}
			set
			{
				if ((this._LoginsToDate != value))
				{
					this.OnLoginsToDateChanging(value);
					this.SendPropertyChanging();
					this._LoginsToDate = value;
					this.SendPropertyChanged("LoginsToDate");
					this.OnLoginsToDateChanged();
				}
			}
		}
		
		[Column(Storage="_LoginAttemptsToday", DbType="SmallInt NOT NULL")]
		public short LoginAttemptsToday
		{
			get
			{
				return this._LoginAttemptsToday;
			}
			set
			{
				if ((this._LoginAttemptsToday != value))
				{
					this.OnLoginAttemptsTodayChanging(value);
					this.SendPropertyChanging();
					this._LoginAttemptsToday = value;
					this.SendPropertyChanged("LoginAttemptsToday");
					this.OnLoginAttemptsTodayChanged();
				}
			}
		}
		
		[Column(Storage="_LoginFailedToday", DbType="SmallInt NOT NULL")]
		public short LoginFailedToday
		{
			get
			{
				return this._LoginFailedToday;
			}
			set
			{
				if ((this._LoginFailedToday != value))
				{
					this.OnLoginFailedTodayChanging(value);
					this.SendPropertyChanging();
					this._LoginFailedToday = value;
					this.SendPropertyChanged("LoginFailedToday");
					this.OnLoginFailedTodayChanged();
				}
			}
		}
		
		[Column(Storage="_PWDChangedLast", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> PWDChangedLast
		{
			get
			{
				return this._PWDChangedLast;
			}
			set
			{
				if ((this._PWDChangedLast != value))
				{
					this.OnPWDChangedLastChanging(value);
					this.SendPropertyChanging();
					this._PWDChangedLast = value;
					this.SendPropertyChanged("PWDChangedLast");
					this.OnPWDChangedLastChanged();
				}
			}
		}
		
		[Column(Storage="_PWDResentLast", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> PWDResentLast
		{
			get
			{
				return this._PWDResentLast;
			}
			set
			{
				if ((this._PWDResentLast != value))
				{
					this.OnPWDResentLastChanging(value);
					this.SendPropertyChanging();
					this._PWDResentLast = value;
					this.SendPropertyChanged("PWDResentLast");
					this.OnPWDResentLastChanged();
				}
			}
		}
		
		[Column(Storage="_PWDResentCount", DbType="Int NOT NULL")]
		public int PWDResentCount
		{
			get
			{
				return this._PWDResentCount;
			}
			set
			{
				if ((this._PWDResentCount != value))
				{
					this.OnPWDResentCountChanging(value);
					this.SendPropertyChanging();
					this._PWDResentCount = value;
					this.SendPropertyChanged("PWDResentCount");
					this.OnPWDResentCountChanged();
				}
			}
		}
		
		[Column(Storage="_PWDResentToday", DbType="SmallInt NOT NULL")]
		public short PWDResentToday
		{
			get
			{
				return this._PWDResentToday;
			}
			set
			{
				if ((this._PWDResentToday != value))
				{
					this.OnPWDResentTodayChanging(value);
					this.SendPropertyChanging();
					this._PWDResentToday = value;
					this.SendPropertyChanged("PWDResentToday");
					this.OnPWDResentTodayChanged();
				}
			}
		}
		
		[Column(Storage="_ABEntryToday", DbType="Int NOT NULL")]
		public int ABEntryToday
		{
			get
			{
				return this._ABEntryToday;
			}
			set
			{
				if ((this._ABEntryToday != value))
				{
					this.OnABEntryTodayChanging(value);
					this.SendPropertyChanging();
					this._ABEntryToday = value;
					this.SendPropertyChanged("ABEntryToday");
					this.OnABEntryTodayChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_AccountLockout", DbType="Bit")]
		public System.Nullable<bool> AccountLockout
		{
			get
			{
				return this._AccountLockout;
			}
			set
			{
				if ((this._AccountLockout != value))
				{
					this.OnAccountLockoutChanging(value);
					this.SendPropertyChanging();
					this._AccountLockout = value;
					this.SendPropertyChanged("AccountLockout");
					this.OnAccountLockoutChanged();
				}
			}
		}
		
		[Column(Storage="_PrintToLabel", DbType="Int NOT NULL")]
		public int PrintToLabel
		{
			get
			{
				return this._PrintToLabel;
			}
			set
			{
				if ((this._PrintToLabel != value))
				{
					this.OnPrintToLabelChanging(value);
					this.SendPropertyChanging();
					this._PrintToLabel = value;
					this.SendPropertyChanged("PrintToLabel");
					this.OnPrintToLabelChanged();
				}
			}
		}
		
		[Column(Storage="_DefaultService", DbType="Char(1)")]
		public System.Nullable<char> DefaultService
		{
			get
			{
				return this._DefaultService;
			}
			set
			{
				if ((this._DefaultService != value))
				{
					this.OnDefaultServiceChanging(value);
					this.SendPropertyChanging();
					this._DefaultService = value;
					this.SendPropertyChanged("DefaultService");
					this.OnDefaultServiceChanged();
				}
			}
		}
		
		[Column(Storage="_BillingRefRequired", DbType="Bit")]
		public System.Nullable<bool> BillingRefRequired
		{
			get
			{
				return this._BillingRefRequired;
			}
			set
			{
				if ((this._BillingRefRequired != value))
				{
					this.OnBillingRefRequiredChanging(value);
					this.SendPropertyChanging();
					this._BillingRefRequired = value;
					this.SendPropertyChanged("BillingRefRequired");
					this.OnBillingRefRequiredChanged();
				}
			}
		}
		
		[Column(Storage="_EmailPOD", DbType="Bit")]
		public System.Nullable<bool> EmailPOD
		{
			get
			{
				return this._EmailPOD;
			}
			set
			{
				if ((this._EmailPOD != value))
				{
					this.OnEmailPODChanging(value);
					this.SendPropertyChanging();
					this._EmailPOD = value;
					this.SendPropertyChanged("EmailPOD");
					this.OnEmailPODChanged();
				}
			}
		}
		
		[Column(Storage="_SuperWebShipper", DbType="Bit NOT NULL")]
		public bool SuperWebShipper
		{
			get
			{
				return this._SuperWebShipper;
			}
			set
			{
				if ((this._SuperWebShipper != value))
				{
					this.OnSuperWebShipperChanging(value);
					this.SendPropertyChanging();
					this._SuperWebShipper = value;
					this.SendPropertyChanged("SuperWebShipper");
					this.OnSuperWebShipperChanged();
				}
			}
		}
		
		[Column(Storage="_UseLocBillingRef", DbType="Bit NOT NULL")]
		public bool UseLocBillingRef
		{
			get
			{
				return this._UseLocBillingRef;
			}
			set
			{
				if ((this._UseLocBillingRef != value))
				{
					this.OnUseLocBillingRefChanging(value);
					this.SendPropertyChanging();
					this._UseLocBillingRef = value;
					this.SendPropertyChanged("UseLocBillingRef");
					this.OnUseLocBillingRefChanged();
				}
			}
		}
		
		[Column(Storage="_HandlingFee", DbType="Money NOT NULL")]
		public decimal HandlingFee
		{
			get
			{
				return this._HandlingFee;
			}
			set
			{
				if ((this._HandlingFee != value))
				{
					this.OnHandlingFeeChanging(value);
					this.SendPropertyChanging();
					this._HandlingFee = value;
					this.SendPropertyChanged("HandlingFee");
					this.OnHandlingFeeChanged();
				}
			}
		}
		
		[Column(Storage="_PrintPublishedRates", DbType="Bit NOT NULL")]
		public bool PrintPublishedRates
		{
			get
			{
				return this._PrintPublishedRates;
			}
			set
			{
				if ((this._PrintPublishedRates != value))
				{
					this.OnPrintPublishedRatesChanging(value);
					this.SendPropertyChanging();
					this._PrintPublishedRates = value;
					this.SendPropertyChanged("PrintPublishedRates");
					this.OnPrintPublishedRatesChanged();
				}
			}
		}
		
		[Column(Storage="_IsUserAdmin", DbType="Bit NOT NULL")]
		public bool IsUserAdmin
		{
			get
			{
				return this._IsUserAdmin;
			}
			set
			{
				if ((this._IsUserAdmin != value))
				{
					this.OnIsUserAdminChanging(value);
					this.SendPropertyChanging();
					this._IsUserAdmin = value;
					this.SendPropertyChanged("IsUserAdmin");
					this.OnIsUserAdminChanged();
				}
			}
		}
		
		[Column(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[Column(Storage="_ShowOnlyUserShipments", DbType="Bit NOT NULL")]
		public bool ShowOnlyUserShipments
		{
			get
			{
				return this._ShowOnlyUserShipments;
			}
			set
			{
				if ((this._ShowOnlyUserShipments != value))
				{
					this.OnShowOnlyUserShipmentsChanging(value);
					this.SendPropertyChanging();
					this._ShowOnlyUserShipments = value;
					this.SendPropertyChanged("ShowOnlyUserShipments");
					this.OnShowOnlyUserShipmentsChanged();
				}
			}
		}
		
		[Column(Storage="_DisableBillingReferenceRequired", DbType="Bit NOT NULL")]
		public bool DisableBillingReferenceRequired
		{
			get
			{
				return this._DisableBillingReferenceRequired;
			}
			set
			{
				if ((this._DisableBillingReferenceRequired != value))
				{
					this.OnDisableBillingReferenceRequiredChanging(value);
					this.SendPropertyChanging();
					this._DisableBillingReferenceRequired = value;
					this.SendPropertyChanged("DisableBillingReferenceRequired");
					this.OnDisableBillingReferenceRequiredChanged();
				}
			}
		}
		
		[Column(Storage="_HardCodeBillingRef", DbType="Bit NOT NULL")]
		public bool HardCodeBillingRef
		{
			get
			{
				return this._HardCodeBillingRef;
			}
			set
			{
				if ((this._HardCodeBillingRef != value))
				{
					this.OnHardCodeBillingRefChanging(value);
					this.SendPropertyChanging();
					this._HardCodeBillingRef = value;
					this.SendPropertyChanged("HardCodeBillingRef");
					this.OnHardCodeBillingRefChanged();
				}
			}
		}
		
		[Column(Storage="_HardCodedBillingRefValue", DbType="VarChar(70)")]
		public string HardCodedBillingRefValue
		{
			get
			{
				return this._HardCodedBillingRefValue;
			}
			set
			{
				if ((this._HardCodedBillingRefValue != value))
				{
					this.OnHardCodedBillingRefValueChanging(value);
					this.SendPropertyChanging();
					this._HardCodedBillingRefValue = value;
					this.SendPropertyChanged("HardCodedBillingRefValue");
					this.OnHardCodedBillingRefValueChanged();
				}
			}
		}
		
		[Column(Storage="_HardCodeBillingRef2", DbType="Bit NOT NULL")]
		public bool HardCodeBillingRef2
		{
			get
			{
				return this._HardCodeBillingRef2;
			}
			set
			{
				if ((this._HardCodeBillingRef2 != value))
				{
					this.OnHardCodeBillingRef2Changing(value);
					this.SendPropertyChanging();
					this._HardCodeBillingRef2 = value;
					this.SendPropertyChanged("HardCodeBillingRef2");
					this.OnHardCodeBillingRef2Changed();
				}
			}
		}
		
		[Column(Storage="_HardCodedBillingRefValue2", DbType="VarChar(70)")]
		public string HardCodedBillingRefValue2
		{
			get
			{
				return this._HardCodedBillingRefValue2;
			}
			set
			{
				if ((this._HardCodedBillingRefValue2 != value))
				{
					this.OnHardCodedBillingRefValue2Changing(value);
					this.SendPropertyChanging();
					this._HardCodedBillingRefValue2 = value;
					this.SendPropertyChanged("HardCodedBillingRefValue2");
					this.OnHardCodedBillingRefValue2Changed();
				}
			}
		}
		
		[Column(Storage="_newCustomerReferralSourceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> newCustomerReferralSourceID
		{
			get
			{
				return this._newCustomerReferralSourceID;
			}
			set
			{
				if ((this._newCustomerReferralSourceID != value))
				{
					this.OnnewCustomerReferralSourceIDChanging(value);
					this.SendPropertyChanging();
					this._newCustomerReferralSourceID = value;
					this.SendPropertyChanged("newCustomerReferralSourceID");
					this.OnnewCustomerReferralSourceIDChanged();
				}
			}
		}
		
		[Column(Storage="_ActivityNotes", DbType="VarChar(50)")]
		public string ActivityNotes
		{
			get
			{
				return this._ActivityNotes;
			}
			set
			{
				if ((this._ActivityNotes != value))
				{
					this.OnActivityNotesChanging(value);
					this.SendPropertyChanging();
					this._ActivityNotes = value;
					this.SendPropertyChanged("ActivityNotes");
					this.OnActivityNotesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.IGroup")]
	public partial class IGroup
	{
		
		private int _GroupId;
		
		private System.Nullable<int> _UID;
		
		private string _GroupName;
		
		private string _GroupDescr;
		
		public IGroup()
		{
		}
		
		[Column(Storage="_GroupId", DbType="Int NOT NULL")]
		public int GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					this._GroupId = value;
				}
			}
		}
		
		[Column(Storage="_UID", DbType="Int")]
		public System.Nullable<int> UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this._UID = value;
				}
			}
		}
		
		[Column(Storage="_GroupName", DbType="VarChar(15)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this._GroupName = value;
				}
			}
		}
		
		[Column(Storage="_GroupDescr", DbType="VarChar(30)")]
		public string GroupDescr
		{
			get
			{
				return this._GroupDescr;
			}
			set
			{
				if ((this._GroupDescr != value))
				{
					this._GroupDescr = value;
				}
			}
		}
	}
	
	public partial class sp_getLatestTimeResult
	{
		
		private string _callInTime;
		
		private string _LastPickUpTime;
		
		public sp_getLatestTimeResult()
		{
		}
		
		[Column(Storage="_callInTime", DbType="Char(5)")]
		public string callInTime
		{
			get
			{
				return this._callInTime;
			}
			set
			{
				if ((this._callInTime != value))
				{
					this._callInTime = value;
				}
			}
		}
		
		[Column(Storage="_LastPickUpTime", DbType="Char(5)")]
		public string LastPickUpTime
		{
			get
			{
				return this._LastPickUpTime;
			}
			set
			{
				if ((this._LastPickUpTime != value))
				{
					this._LastPickUpTime = value;
				}
			}
		}
	}
	
	public partial class sp_getEarliestClosingTimeResult
	{
		
		private string _EarliestTime;
		
		public sp_getEarliestClosingTimeResult()
		{
		}
		
		[Column(Storage="_EarliestTime", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string EarliestTime
		{
			get
			{
				return this._EarliestTime;
			}
			set
			{
				if ((this._EarliestTime != value))
				{
					this._EarliestTime = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
